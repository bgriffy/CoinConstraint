@page "/"
@using CoinConstraint.Client.Infrastructure.Extensions
@inject IBudgetingService BudgetingService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<MediaQuery Media="@Breakpoints.SmallDown" @bind-Matches="_isSmallScreen" />
<MediaQuery Media="@Breakpoints.OnlyMedium" @bind-Matches="_isMediumScreen" />
<MediaQuery Media="@Breakpoints.LargeUp" @bind-Matches="_isLargeScreen" />

<LoadSpinner @ref="_loadSpinner"></LoadSpinner>

<ExpenseDetailModal @ref="_expenseModal"
                        ExpenseAdded=HandleNewExpense
                        ExpenseUpdated=HandleUpdatedExpenses>
</ExpenseDetailModal>

<BudgetsModal @ref="_budgetsModal"
                       Budgets="_budgets"
                       BudgetAdded=HandleNewBudget
                       BudgetCloneRequested=HandleBudgetClone
                       BudgetModified=HandleUpdatedBudgets
                       BudgetDeleted=HandleDeletedBudget
                       BudgetsSaveRequested="@(async() => await SaveBudgets())">
</BudgetsModal>

<NoteModal @ref="_noteModal" NoteAdded=HandleNewNote />

@if (_pageIsLoaded)
{
    <Field Horizontal="true" Margin="Margin.Is1.FromLeft">
        <Label Margin="Margin.Is4.FromRight.Is2.FromTop">Budgets</Label>
        <FieldBody>
            <BudgetDropdown Budgets=@this.BudgetsForDropdown
                                     SelectedBudget=_selectedBudget
                                     SelectedBudgetChanged=@(async(budgetID) => await HandleBudgetChange(budgetID))>
            </BudgetDropdown>
        </FieldBody>
        <Button Margin="Margin.Is2.OnY.OnMobile.Is0.FromTop.OnTablet.Is2.Is4.FromLeft"
            Color="Color.Primary"
            Size="Size.ExtraSmall"
            Clicked=OpenBudgetManagementModal>
            <Icon Margin=Margin.Is2.FromRight IconSize="IconSize.Large" Name="@("fas fa-clipboard-list")"></Icon>
            @if (_isSmallScreen)
            {
                <span>Manage</span>
            }
            else
            {
                <span>Manage Budgets</span>
            }
        </Button>
    </Field>

    <ExpenseDatagrid ExpenseDeleted=HandleDeletedExpense
                          ExpenseDetailModalRequested="@((expense) => OpenExpenseDetailModalModal(expense))"
                          NewExpenseDetailModalRequested=OpenExpenseDetailModalModal
                          ExpensePaymentRequested="@(async(expense) => await OpenPaymentURLAsync(expense))"
                          SelectedBudget=_selectedBudget
                          SelectedExpense=_selectedExpense>
    </ExpenseDatagrid>

    <Row>
        <Column ColumnSize=ColumnSize.Is4.OnTablet.Is3.OnWidescreen>
            <NoteDatagrid NewNoteModalRequested=OpenNoteModalForNewNote
                               NoteDeletionRequested="@((note) => DeleteNote(note))"
                               Notes=_selectedBudget.Notes>
            </NoteDatagrid>
        </Column>

        <Column ColumnSize=ColumnSize.Is4.OnTablet.Is3.OnWidescreen>
            <BudgetTotalsSection BudgetAmount="@_selectedBudget.BudgetedAmount" 
                                          ExpensedAmount="@_selectedBudget.ExpensedAmount" 
                                          BudgetAmountChanged="@(() => _isDirty = true)">
            </BudgetTotalsSection>
        </Column>
    </Row>

    <Button Size=Size.Medium Clicked="@(async() => await SaveChanges())" Margin="Margin.Is4.FromBottom.Is2.FromRight" Padding="Padding.Is2.OnX.Is1.OnY" Color="Color.Primary"><Icon Name="IconName.Save" /> Save</Button>
}

